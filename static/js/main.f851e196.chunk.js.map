{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","smilecheese.jpeg","components/Navigation.js","routes/Profile.js","routes/MyTweets.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","alert","val","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","sort","b","Navigation","cheeseObj","to","displayName","Img","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","MyTweets","myTweets","setMyTweets","getMyTweets","where","orderBy","get","myTweetArray","myTweet","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f851e196.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Sign In\"}</span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    // eslint-disable-next-line no-unused-vars\n    const data = await authService.signInWithPopup(provider);\n  };\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name={\"google\"}>\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name={\"github\"}>\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your tweet\"\n                  value={newNweet}\n                  required\n                  onChange={onChange}\n                />\n                <input type=\"submit\" value=\"Update Tweet\" />\n              </form>\n              <button onClick={toggleEditing}>Cancel</button>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Tweet</button>\n              <button onClick={toggleEditing}>Edit Tweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    if (nweetObj.text !== \"\") {\n      await dbService.collection(\"nweets\").add(nweetObj);\n    } else {\n      const err = window.alert(\"빈 트윗은 못 올려요\");\n    }\n\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    // const {\n    //   target: { value },\n    // } = event;\n\n    let val = event.target.value;\n    setNweet(val);\n    // console.log(val);\n    // setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={nweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Tweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\n\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  // console.log(userObj);\n\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      nweetArray.sort(function (a, b) {\n        return b.createAt - a.createAt;\n      });\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/smilecheese.5a49c4df.jpeg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Img from \"smilecheese.jpeg\";\n\nconst Navigation = ({ userObj, cheeseObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to={\"/\"}>Home</Link>\n      </li>\n      <li>\n        <Link to={\"/profile\"}>{userObj.displayName}의 Profile</Link>\n      </li>\n      <li>\n        <Link to={\"/myTweets\"}>My Tweets</Link>\n      </li>\n    </ul>\n    <img src={Img} width=\"190px\" height=\"340px\" />\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\n\nconst MyTweets = ({ userObj }) => {\n  // console.log(userObj.uid);\n  const [myTweets, setMyTweets] = useState([]);\n\n  // useEffect(() => {\n  //   dbService\n  //     .collection(\"nweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\", \"desc\")\n  //     .onSnapshot((snapshot) => {\n  //       const myTweetArray = snapshot.docs.map((doc) => ({\n  //         id: doc.id,\n  //         ...doc.data(),\n  //       }));\n  //       console.log(\n  //         dbService\n  //           .collection(\"nweets\")\n  //           .where(\"creatorId\", \"==\", userObj.uid)\n  //           .orderBy(\"createdAt\", \"desc\")\n  //           .get()\n  //       );\n  //       console.log(myTweetArray);\n  //       setMyTweets(myTweetArray);\n  //     });\n  // }, []);\n\n  const getMyTweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createAt\", \"desc\")\n      .get();\n    // console.log(nweets.docs.map((doc) => doc.data()));\n    const myTweetArray = nweets.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    setMyTweets(myTweetArray);\n  };\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n\n  return (\n    <div>\n      {myTweets.map((myTweet) => (\n        <Nweet\n          key={myTweet.id}\n          nweetObj={myTweet}\n          isOwner={myTweet.creatorId === userObj.uid}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default MyTweets;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\nimport MyTweets from \"../routes/MyTweets\";\nimport { storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  // const cheeseObj = storageService.ref().child(`smilecheese.jpeg`);\n  // const cheeseUrl = cheeseObj.getDownloadURL();\n\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Route exact path={\"/mytweets\"}>\n              <MyTweets userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n      // console.log(user);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}